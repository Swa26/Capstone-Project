import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class MyApp3 extends StatelessWidget {
  const MyApp3({super.key});
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: const imageViewer(),
    );
  }
}

class imageViewer extends StatefulWidget {
  const imageViewer({super.key});
  _imageViewerState createState() => _imageViewerState();
}

class _imageViewerState extends State<imageViewer> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: StreamBuilder<QuerySnapshot>(
          stream: FirebaseFirestore.instance
              .collection('Images3')
              .doc('image4')
              .collection('images4')
              .snapshots(),
          builder: ((context, snapshot) {
            if (snapshot.hasData) {
              return ListView.builder(
                itemCount: snapshot.data!.docs.length,
                itemBuilder: (BuildContext context, index) {
                  DocumentSnapshot documentSnapshot =
                      snapshot.data!.docs[index];

                  return userData(
                    id: documentSnapshot['id'],
                    url: documentSnapshot['image'],
                  );
                },
              );
            } else {
              return Center(
                child: CircularProgressIndicator(),
              );
            }
          })),
    );
  }
}

class userData extends StatefulWidget {
  final id;
  final url;
  const userData({super.key, this.id, this.url});
  _userDataState createState() => _userDataState();
}

class _userDataState extends State<userData> {
  bool expand = false;
  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.only(left: 70.0, right: 70.0, top: 40.0),
      child: Container(
        padding: EdgeInsets.all(20.0),
        decoration: BoxDecoration(
          border: Border.all(
            style: BorderStyle.solid,
            color: Colors.green,
            width: 1.0,
          ),
        ),
        child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Container(
                child: Image.network(
                  widget.url,
                  width: 150.0,
                  height: 150.0,
                ),
              ),
              Text(widget.id),
            ],
          ),
          SizedBox(
            height: 10.0,
          ),
        ]),
      ),
    );
  }
}
